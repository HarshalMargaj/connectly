
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}


model User {
  id            String   @id               // Clerkâ€™s userId (no @default)
  userName      String
  userImage     String

  // Communities this user has created
  createdCommunities Community[] @relation("CreatedCommunities")

  // Communities this user has joined
  joinedCommunities  Community[] @relation("JoinedCommunities")

  createdPosts       Post[] @relation("CreatedPosts")

  Comment Comment[]

  PostReaction PostReaction[]
}

model Community {
  id          String   @id @default(uuid())
  name        String
  description String
  slug        String   @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Owner of the community
  userId      String?  
  owner       User?     @relation("CreatedCommunities", fields: [userId], references: [id])

  // Users who have joined this community
  joinedBy    User[]   @relation("JoinedCommunities")

  posts       Post[]
}

model Post {
  id          String   @id @default(uuid())
  title       String   
  description String
  userId      String 
  owner       User?     @relation("CreatedPosts", fields: [userId], references: [id])
  communityId String
  community   Community @relation(fields: [communityId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt @default(now())
  likes       Int
  dislikes    Int
  comments    Comment[]

  PostReaction PostReaction[]
}


model Comment {
  id        String   @id @default(uuid())
  content   String
  userId    String
  postId    String
  post      Post     @relation(fields: [postId], references: [id])
  author    User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}

model PostReaction {
  id        String        @id @default(uuid())
  postId    String
  userId    String
  type      ReactionType
  createdAt DateTime      @default(now())

  post      Post          @relation(fields: [postId], references: [id])
  user      User          @relation(fields: [userId], references: [id])

  @@unique([postId, userId]) // prevents duplicate reactions by the same user
}

enum ReactionType {
  LIKE
  DISLIKE
}
